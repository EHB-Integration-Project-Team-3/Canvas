name: CI Pipeline Canvas
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v2
    - 
      name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - 
      name: Install dependencies
      run: dotnet restore
    - 
      name: Build
      run: dotnet build --no-restore
    - 
      name: Test
      run: dotnet test
      
    - 
      name: publish
      working-directory: CanvasRabbitMQSender
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
    - 
      name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/myapp
  deploy:
    runs-on: windows-latest
    needs: build
    steps:
    - 
      name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: .net-app
    -
      name: Create VPN connection
      shell: pwsh
      env:
        USER: ${{ secrets.EHB_USER}}
        SECRET: ${{ secrets.EHB_PASSWORD}}
      run: | 
       Add-VpnConnection -Name "EHB_VPN" -ServerAddress "dtsslvpn.ehb.be" -TunnelType "SSTP" -AllUserConnection -Force
       rasdial "EHB_VPN" "$env:USER" "$env:SECRET"

       
    - name: FTP Deploy
        #You may pin to the exact commit or the version.
        #uses: SamKirkland/FTP-Deploy-Action@2a4e9b1312ebeb73a1f72b9330c71831c1e4ce01
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with: 
        server: 10.3.17.67
        username: ftpuser
        password: ubuntu123
        port: 21
  start:
     runs-on: ubuntu-20.04
     needs: build
     steps:
      - 
       name: SSH Remote Commands
  # You may pin to the exact commit or the version.
  # uses: appleboy/ssh-action@1d1b21ca96111b1eb4c03c21c14ebb971d2200f6
       uses: appleboy/ssh-action@v0.1.4
       with:
    # ssh host
        host: 10.3.17.67
    # ssh username
        username: canvas
    # ssh password
        password: ${{ secrets.VM_PASSWORD }}
        script: sh service.sh

